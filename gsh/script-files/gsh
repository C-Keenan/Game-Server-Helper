#!/usr/bin/env bash

if [ "$1" == "factorio" ]
then
  if [ "$2" == "up" ]
  then
    docker compose -f /usr/gsh/docker/factorio/docker-compose.yml up -d
  elif [ "$2" == "down" ]
  then
    x=$(($(cat /usr/gsh/docker/factorio/config/server-settings.json | grep autosave_interval | awk 'FNR==2{print$0}' | colrm 1 23 | colrm 3)*60))
    echo "Container will be stopped in $((x/60)) minutes to allow for a save to happen. Terminal will be unresponsive during this time. Please do something else for now or come back in $((x/60)) minutes."
    while [ $x -ge 0 ]
    do
      if [ $x -gt 0 ]
      then
        printf '%dh:%dm:%ds\n' $(($x/3600)) $(($x%3600/60)) $(($x%60))
        x=$((x-1))
        sleep 1
        clear
      else
        docker compose -f /usr/gsh/docker/factorio/docker-compose.yml down
        break
      fi
    done
  elif [ "$2" == "logs" ]
  then
    docker compose -f /usr/gsh/docker/factorio/docker-compose.yml logs
  elif [ "$2" == "pull" ]
  then
    docker compose -f /usr/gsh/docker/factorio/docker-compose.yml pull
  elif [ "$2" == "tail-logs" ]
  then
    docker compose -f /usr/gsh/docker/factorio/docker-compose.yml logs -f
  elif [ "$2" == "--help" ]
  then
    cat /usr/gsh/messages/help/factorio-help.txt
    printf '\n'
  elif [ "$2" == "" ]
  then
    cat /usr/gsh/messages/help/factorio-help.txt
    printf '\n'
  fi
elif [ "$1" == "satisfactory" ]
then
  if [ "$2" == "up" ]
  then
    docker compose -f /usr/gsh/docker/satisfactory/docker-compose.yml up -d
  elif [ "$2" == "down" ]
  then
    docker compose -f /usr/gsh/docker/satisfactory/docker-compose.yml down
  elif [ "$2" == "logs" ]
  then
    docker compose -f /usr/gsh/docker/satisfactory/docker-compose.yml logs
  elif [ "$2" == "pull" ]
  then
    docker compose -f /usr/gsh/docker/satisfactory/docker-compose.yml pull
  elif [ "$2" == "tail-logs" ]
  then
    docker compose -f /usr/gsh/docker/satisfactory/docker-compose.yml logs -f
  elif [ "$2" == "--help" ]
  then
    cat /usr/gsh/messages/help/satisfactory-help.txt
    printf '\n'
  elif [ "$2" == "" ]
  then
    cat /usr/gsh/messages/help/satisfactory-help.txt
    printf '\n'
  fi
elif [ "$1" == "veloren" ]
then
  if [ "$2" == "up" ]
  then
    docker compose -f /usr/gsh/docker/veloren/docker-compose.yml up -d
  elif [ "$2" == "down" ]
  then
    docker compose -f /usr/gsh/docker/veloren/docker-compose.yml down
  elif [ "$2" == "logs" ]
  then
    docker compose -f /usr/gsh/docker/veloren/docker-compose.yml logs
  elif [ "$2" == "pull" ]
  then
    docker compose -f /usr/gsh/docker/veloren/docker-compose.yml pull
  elif [ "$2" == "tail-logs" ]
  then
    docker compose -f /usr/gsh/docker/veloren/docker-compose.yml logs -f
  elif [ "$2" == "--help" ]
  then
    cat /usr/gsh/messages/help/veloren-help.txt
    printf '\n'
  elif [ "$2" == "" ]
  then
    cat /usr/gsh/messages/help/veloren-help.txt
    printf '\n'
  fi
elif [ "$1" == "uninstall" ]
then
  bash /usr/gsh/script-files/uninstall
elif [ "$1" == "--help" ]
then
  cat /usr/gsh/messages/help/help.txt
  printf '\n'
elif [ "$1" == "" ]
then
  cat /usr/gsh/messages/help/help.txt
  printf '\n'
fi
